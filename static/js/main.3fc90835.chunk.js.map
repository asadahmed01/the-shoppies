{"version":3,"sources":["components/movieList.jsx","components/nominated.jsx","components/searchBar.jsx","App.js","reportWebVitals.js","index.js"],"names":["MovieList","movies","onNominate","status","className","map","movie","Title","Year","type","onClick","imdbID","disabled","Nominated","list","onRemove","length","item","SearchBar","state","search","nominated","value","isButtonDisabled","handleChange","event","a","target","setState","process","axios","get","then","res","data","Search","filter","m","toLowerCase","includes","handleNominate","id","nominatedMovies","console","log","localStorage","setItem","JSON","stringify","toast","success","position","hideProgressBar","autoClose","handleRemove","removed","filterStorage","parse","getItem","this","placeholder","onChange","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3fc90835.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst MovieList = ({ movies, onNominate, status }) => {\r\n  return (\r\n    <ul className=\"bg-white mt-4 list-group\">\r\n      {movies.map((movie) => (\r\n        <li className=\"p-3 list-group-item border-0\" key={movie.imdbID}>\r\n          {movie.Title} ({movie.Year}){\" \"}\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            type=\"button\"\r\n            onClick={() => onNominate(movie.imdbID)}\r\n            disabled={status === movie.imdbID}\r\n          >\r\n            Nominate\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default MovieList;\r\n","import React from \"react\";\r\n\r\nconst Nominated = ({ list, onRemove }) => {\r\n  return (\r\n    <div className=\"bg-white mt-4\">\r\n      <h3>{list.length > 0 && \"Nominated\"}</h3>\r\n      {!list.length ? (\r\n        \"\"\r\n      ) : (\r\n        <ul className=\"list-group\">\r\n          {list.map((item) => (\r\n            <li key={item.imdbID} className=\"list-group-item border-0 \">\r\n              {item.Title} {item.Year}\r\n              <button\r\n                className=\"btn btn-danger\"\r\n                onClick={() => onRemove(item.imdbID)}\r\n              >\r\n                Remove\r\n              </button>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Nominated;\r\n","import axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport testUtils from \"react-dom/test-utils\";\r\nimport { toast } from \"react-toastify\";\r\nimport MovieList from \"./movieList\";\r\nimport Nominated from \"./nominated\";\r\n\r\nconst apiEndpoint = `http://www.omdbapi.com/?apikey=c2e53c15&t=Game of Thrones`;\r\nclass SearchBar extends Component {\r\n  state = {\r\n    movies: [],\r\n    search: [],\r\n    nominated: [],\r\n    value: \"\",\r\n    isButtonDisabled: -1,\r\n  };\r\n\r\n  componentDidMount() {\r\n    const data = JSON.parse(localStorage.getItem(\"nominated\") || \"[]\");\r\n\r\n    this.setState({ nominated: data });\r\n  }\r\n\r\n  handleChange = async (event) => {\r\n    const { movies } = this.state;\r\n    const value = event.target.value;\r\n    this.setState({ value });\r\n    /////\r\n    const api = process.env.REACT_APP_MOVIES_API_KEY;\r\n\r\n    axios\r\n      .get(`http://www.omdbapi.com/?apikey=${api}&s=${value}`)\r\n      .then((res) => res.data)\r\n      .then((res) => {\r\n        if (!res.Search) {\r\n          return;\r\n        }\r\n        this.setState({ movies: [...this.state.movies, res.Search] }); //movies: res.Search\r\n        const moviesList = res.Search;\r\n        const item = moviesList.filter((m) => {\r\n          return m.Title.toLowerCase().includes(value.toLowerCase());\r\n        });\r\n        this.setState({ search: item });\r\n      });\r\n  };\r\n\r\n  handleNominate = (id) => {\r\n    const { search, nominated } = this.state;\r\n    this.setState({ isButtonDisabled: id });\r\n    const movies = [...search];\r\n    const nominatedMovies = movies.filter((m) => m.imdbID === id);\r\n\r\n    this.setState({ nominated: [...this.state.nominated, ...nominatedMovies] });\r\n    console.log(this.state.nominated);\r\n    //persist it to the local storage\r\n    localStorage.setItem(\"nominated\", JSON.stringify(nominated));\r\n    if (nominated.length === 4) {\r\n      toast.success(\"You have nominated 5 movies.\", {\r\n        position: \"top-center\",\r\n        hideProgressBar: true,\r\n        autoClose: 1500,\r\n      });\r\n\r\n      return;\r\n    }\r\n  };\r\n\r\n  handleRemove = (id) => {\r\n    const { nominated } = this.state;\r\n    const filtered = [...nominated];\r\n    const removed = filtered.filter((movie) => movie.imdbID !== id);\r\n    this.setState({ nominated: removed });\r\n    //remove from the localstorage\r\n    const items = JSON.parse(localStorage.getItem(\"nominated\"));\r\n    const filterStorage = items.filter((item) => item.imdbID !== id);\r\n    //put back to the storage\r\n    localStorage.setItem(\"nominated\", JSON.stringify(filterStorage));\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.state.nominated);\r\n    return (\r\n      <div className=\"container mt-5 bg-light p-5 flex\">\r\n        <input\r\n          value={this.state.value}\r\n          type=\"text\"\r\n          placeholder=\"Search movie to nominate...\"\r\n          className=\"form-control\"\r\n          onChange={this.handleChange}\r\n        />\r\n        <div className=\"row\">\r\n          <div className=\"col-6\">\r\n            <h3>\r\n              {this.state.search.length > 0 &&\r\n                `Results for \"${this.state.value}\"`}\r\n            </h3>\r\n            <MovieList\r\n              movies={this.state.search}\r\n              onNominate={this.handleNominate}\r\n              status={this.state.isButtonDisabled}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"col-6\">\r\n            <Nominated\r\n              list={this.state.nominated}\r\n              onRemove={this.handleRemove}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import \"./App.css\";\nimport SearchBar from \"./components/searchBar\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SearchBar />\n      <ToastContainer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}